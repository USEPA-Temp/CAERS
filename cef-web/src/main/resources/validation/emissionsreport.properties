
# Emissions Report

report.year.required = Report Year is required.
report.agencyCode.required = Agency Code is required.
report.frsFacilityId.required = FRS Facility ID is required.
report.eisProgramId.required = EIS Program ID is required.

report.year.min = Report Year is less than {0}.

# Facility Site

facilitysite.eisProgramId.required = EIS Program ID is required.

#Emissions Process
emissionsProcess.releasePointAppts.percent.total = For (Emission Unit: {0}, Emission Process: {1}) the total apportionment for all release points associated with this process must equal 100%

# Reporting Period
reportingPeriod.calculationParameterValue.required = For (Emission Unit: {0}, Emission Process: {1}) Annual Throughput is required.
reportingPeriod.calculationParameterValue.min =  For (Emission Unit: {0}, Emission Process: {1}) Annual Throughput must be greater than or equal to zero.
reportingPeriod.calculationMaterialCode.required = For (Emission Unit: {0}, Emission Process: {1}) Throughput Material is required.
reportingPeriod.calculationParameterTypeCode.required = For (Emission Unit: {0}, Emission Process: {1}) Throughput Type is required.
reportingPeriod.calculationParameterUom.required = For (Emission Unit: {0}, Emission Process: {1}) Throughput UoM is required.
reportingPeriod.emission.duplicate = For (Emission Unit: {0}, Emission Process: {1}) {2} is reported twice for the same process.
reportingPeriod.emission.pm10.fil.greater.pri = For (Emission Unit: {0}, Emission Process: {1}) PM10 Filterable should not exceed PM10 Primary.
reportingPeriod.emission.pm25.fil.greater.pri = For (Emission Unit: {0}, Emission Process: {1}) PM2.5 Filterable should not exceed PM2.5 Primary.
reportingPeriod.emission.pm10.con.greater.pri = For (Emission Unit: {0}, Emission Process: {1}) PM Condensable should not exceed PM10 Primary.
reportingPeriod.emission.pm25.con.greater.pri = For (Emission Unit: {0}, Emission Process: {1}) PM Condensable should not exceed PM2.5 Primary.
reportingPeriod.emission.pm10.invalid = For (Emission Unit: {0}, Emission Process: {1}) PM10-FIL + PM-CON must equal PM10-PRI.
reportingPeriod.emission.pm25.invalid = For (Emission Unit: {0}, Emission Process: {1}) PM25-FIL + PM-CON must equal PM25-PRI.
reportingPeriod.emission.pm25.pri.greater.pm10 = For (Emission Unit: {0}, Emission Process: {1}) PM2.5 Primary should not exceed PM10 Primary.
reportingPeriod.emission.pm25.fil.greater.pm10 = For (Emission Unit: {0}, Emission Process: {1}) PM2.5 Filterable should not exceed PM10 Filterable.
reportingPeriod.emission.hf.greater.fluorides = For (Emission Unit: {0}, Emission Process: {1}) Fluorides/16984488 value must be greater than or equal to HF/7664393.

# Emission Factor
emission.emissionsCalcMethodCode.required = For (Emission Unit: {0}, Emission Process: {1}, Pollutant: {2}) Emission Calculation Method Code must be reported.
emission.comments.required.method = For (Emission Unit: {0}, Emission Process: {1}, Pollutant: {2}) an entry into the "Comments" field should be required when Calculation Method does not utilize an Emission Factor.
emission.emissionsFactor.required.method = For (Emission Unit: {0}, Emission Process: {1}, Pollutant: {2}) Emission Factor is required when Calculation Method utilizes an Emission Factor.
emission.emissionsFactor.banned.method = For (Emission Unit: {0}, Emission Process: {1}, Pollutant: {2}) Emission Factor is not allowed when Calculation Method does not utilize an Emission Factor.
emission.emissionsNumeratorUom.required.emissionsFactor = For (Emission Unit: {0}, Emission Process: {1}, Pollutant: {2}) if the emission factor is reported, then the emission factor numerator unit of measure is required.
emission.emissionsDenominatorUom.required.emissionsFactor = For (Emission Unit: {0}, Emission Process: {1}, Pollutant: {2}) if the emission factor is reported, then the emission factor denominator unit of measure is required.
emission.emissionsNumeratorUom.banned.emissionsFactor = For (Emission Unit: {0}, Emission Process: {1}, Pollutant: {2}) if the emission factor is reported, then the emission factor numerator unit of measure is not allowed.
emission.emissionsDenominatorUom.banned.emissionsFactor = For (Emission Unit: {0}, Emission Process: {1}, Pollutant: {2}) if the emission factor is reported, then the emission factor denominator unit of measure is not allowed.
emission.totalEmissions.nonzero.method = For (Emission Unit: {0}, Emission Process: {1}, Pollutant: {2}) if the Throughput is zero and the emissions method code is CEMS the emissions data entered must be zero.

# Operating Detail
operatingDetail.avgHoursPerDay.required = For (Emission Unit: {0}, Emission Process: {1}) Average Hours/Day is required.
operatingDetail.avgHoursPerDay.range = For (Emission Unit: {0}, Emission Process: {1}) Average Hours Per Day must be between 0.1 and 24.
operatingDetail.avgDaysPerWeek.required = For (Emission Unit: {0}, Emission Process: {1}) Average Days/Week is required.
operatingDetail.avgDaysPerWeek.range = For (Emission Unit: {0}, Emission Process: {1}) Average Days Per Week must be between 0.1 and 7.
operatingDetail.avgWeeksPerPeriod.required = For (Emission Unit: {0}, Emission Process: {1}) Average Weeks/Year is required.
operatingDetail.avgWeeksPerPeriod.range = For (Emission Unit: {0}, Emission Process: {1}) Average Weeks Per Year must be between 1 and 52.
operatingDetail.actualHoursPerPeriod.required = For (Emission Unit: {0}, Emission Process: {1}) Actual Hours/Year is required.
operatingDetail.actualHoursPerPeriod.range = For (Emission Unit: {0}, Emission Process: {1}) Actual Hours Per Year must be between 1 and 8784.
operatingDetail.avgWeeksPerPeriod.seasons.4 = For (Emission Unit: {0}, Emission Process: {1}) if Average Weeks/Year > 39 then all Season percentages are required to be > 0%.
operatingDetail.avgWeeksPerPeriod.seasons.3 = For (Emission Unit: {0}, Emission Process: {1}) if Average Weeks/Year > 26 then at least three Season percentages are required to be > 0%.
operatingDetail.avgWeeksPerPeriod.seasons.2 = For (Emission Unit: {0}, Emission Process: {1}) if Average Weeks/Year > 13 then at least two Season percentages are required to be > 0%.
operatingDetail.percent.total = For (Emission Unit: {0}, Emission Process: {1}) the sum of seasonal percentages must be between 99.5 and 100.5.
operatingDetail.percentSpring.required = For (Emission Unit: {0}, Emission Process: {1}) Spring Season percent is required.
operatingDetail.percentSummer.required = For (Emission Unit: {0}, Emission Process: {1}) Summer Season percent is required.
operatingDetail.percentFall.required = For (Emission Unit: {0}, Emission Process: {1}) Fall Season percent is required.
operatingDetail.percentWinter.required =For (Emission Unit\: {0}, Emission Process\: {1}) Winter Season percent is required.